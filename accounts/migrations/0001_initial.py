# Generated by Django 3.1 on 2021-07-15 08:31

import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone
import imagekit.models.fields
import uuid
import validation.image_validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.CharField(default=uuid.uuid4, editable=False, max_length=255, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='メールアドレス')),
                ('username', models.CharField(blank=True, default='名無しさん', max_length=255, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='ユーザー名')),
                ('user_profile', models.TextField(blank=True, default='よろしくお願いします', max_length=500, verbose_name='プロフィール')),
                ('user_icon', imagekit.models.fields.ProcessedImageField(blank=True, null=True, upload_to='user_icon/', validators=[validation.image_validators.image_validator], verbose_name='アイコン')),
                ('encoded_icon', models.TextField(blank=True, null=True, verbose_name='エンコードしたアイコン')),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='登録日')),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
